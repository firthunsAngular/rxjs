{
  "audit": "      <p>\n          El operador <strong>audit</strong> en RxJS es útil cuando necesitas controlar la emisión de valores en función\n          de un segundo Observable, que representa una \"ventana de tiempo\".\n        </p>\n        <p>\n          Básicamente, audit opera de la siguiente manera:\n        </p>\n        <ol>\n          <li>\n            Tienes un flujo de datos principal, un Observable que emite valores.\n          </li>\n          <li>\n            Junto a él, tienes otro Observable que actúa como un temporizador o un controlador de ventanas de tiempo.\n          </li>\n          <li>\n            <strong>audit</strong> espera a que este segundo Observable emita un valor y solo permite que los valores\n            del flujo principal pasen hacia abajo cuando ocurre esta emisión.\n          </li>\n        </ol>\n        <p>\n          En términos más prácticos, <strong>audit</strong> puede ser útil cuando tienes una secuencia de eventos y solo\n          te interesa obtener el último evento dentro de ciertos intervalos de tiempo. Esto es útil, por ejemplo, para\n          evitar el procesamiento excesivo o innecesario de eventos, especialmente en situaciones donde una ráfaga de\n          eventos ocurre en rápida sucesión.\n        </p>\n        <p>\n          Un ejemplo podría ser un botón que se presiona muchas veces en un corto período y solo te interesa manejar la\n          acción del último botón presionado dentro de cada segundo. <strong>audit</strong> te permitiría capturar solo\n          el último clic dentro de esos intervalos de tiempo.\n        </p>\n        <p>\n          En resumen, <strong>audit</strong> actúa como un filtro temporal, permitiendo pasar solo el último valor del\n          flujo principal dentro de intervalos definidos por otro Observable, lo que puede ayudar a controlar la\n          frecuencia o la cantidad de datos que se procesan.\n        </p>",
  "animationFrames": "  <h5>Ejemplo de uso de animationFrames</h1>\n    <p>\n      El operador <strong>animationFrames</strong> en JavaScript se utiliza para realizar animaciones\n      fluidas en el navegador aprovechando los fotogramas de animación disponibles.\n    </p>\n    <p>\n      Básicamente, permite ejecutar una función en cada fotograma de animación, sincronizándose con la tasa\n      de refresco de la pantalla, lo que es útil para crear animaciones suaves y eficientes.\n    </p>"
}
